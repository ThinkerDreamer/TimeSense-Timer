html {
    --container-size: 70vw;
    --max-container-size: 400px;
    --remaining-path-color: #2DAC36;
    font-family: 'Roboto Mono', monospace;
    max-height: 100vh;
    margin: 0;
    background-color: #0E032B;
    color: #FFF7E5;
    font-size: 1.2vw;
}

h1 {
    font-weight: 400;
    margin-top: 0;
    margin-bottom: 5px;
}

p {
    line-height: 1.6;
    font-size: 1.2rem;
    margin-bottom: 2rem;
}

em {
    font-style: normal;
    font-weight: bold;
    color: #ffefca;
}

#app {
    width: var(--container-size);
    max-width: var(--max-container-size);
    min-width: 150px;
    margin: 2em auto 0;
    text-align: center;
}

.pop-out-icon {
    display: flex;
    justify-content: end;
    margin-top: 0;
    cursor: pointer;
}

.pop-out-icon:hover,
.pop-out-icon:focus {
    color: #ffefca;
}

.controls-area {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 2rem 0 0;
}

.input-div {
    width: 75%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.time-input {
    display: inline-block;
    width: 3em;
    border: 1px solid #ccc;
    border-radius: 4px;
    padding: 0.5em;
    font-size: 1rem;
    background-color: #FFF7E5;
}

/* --- Hide arrows in number inputs --- */
/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* Firefox */
input[type=number] {
    -moz-appearance: textfield;
}

.button-div {
    width: 85%;
    display: flex;
    justify-content: space-evenly;
    margin: 1em 0;
}

.remaining-path-color {
    color: var(--remaining-path-color);
}

button {
    display: inline-block;
    border: 1px solid #ccc;
    border-radius: 4px;
    padding: 0.5em 1.25em;
    font-size: 1rem;
    background-color: #FFF7E5;
    color: #0E032B;
    cursor: pointer;
}

#pause-btn {
    display: none;
}

/* Sets the containers height and width */
.base-timer {
    position: relative;
    height: var(--container-size);
    max-height: var(--max-container-size);
    width: var(--container-size);
    max-width: var(--max-container-size);
}

/* Removes SVG styling that would hide the time label */
.base-timer__circle {
    fill: none;
    stroke: none;
}

/* The SVG path that displays the timer's progress */
.base-timer__path-elapsed {
    stroke-width: 9px;
    stroke: grey;
}

.base-timer__label {
    position: absolute;
    font-size: 3rem;

    /* Size should match the parent container */
    width: var(--container-size);
    max-width: var(--max-container-size);
    height: var(--container-size);
    max-height: var(--max-container-size);

    /* Keep the label aligned to the top */
    top: 0;

    /* Create a flexible box that centers content vertically and horizontally */
    display: flex;
    align-items: center;
    justify-content: center;

}

.base-timer__path-remaining {
    /* Just as thick as the original ring */
    stroke-width: 9px;

    /* Rounds the line endings to create a seamless circle */
    stroke-linecap: round;

    /* Makes sure the animation starts at the top of the circle */
    transform: rotate(90deg);
    transform-origin: center;

    /* One second aligns with the speed of the countdown timer */
    transition: 1s linear all;

    /* Allows the ring to change color when the color value updates */
    stroke: currentColor;
}

.base-timer__svg {
    /* Flips the svg and makes the animation to move left-to-right */
    transform: scaleX(-1);
}

@media screen and (max-width: 1300px) {
    html {
        font-size: 1.2rem;
    }

}

@media screen and (max-width: 500px) {
    html {
        font-size: 5vw;
    }

    .base-timer__label {
        font-size: 2rem;
    }

    .description {
        display: none;
    }
}
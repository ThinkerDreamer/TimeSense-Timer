.app {
  text-align: center;
}

.app-header {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  color: white;
  font-size: calc(10px + 2vmin);
  background-color: #282c34;
}

.app-link {
  color: #61dafb;
}

@keyframes app-logo-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

html {
  --old-background-color: #0e032b;
  --old-em-color: #ffefca;
  --old-text-color: #fff7e5;
  --container-size: 70vw;
  --max-container-size: 400px;
  --old-remaining-path-color: #2dac36;
  --old-green: #2dac36;
  --old-orange: #ff7a5c;
  --old-red: #f1224c;
  --old-ccc-grey: #ccc;

  --remaining-path-color: var(--new-green);
  --new-text-color: #dbc5e7;
  --new-green: #5dd9c1;
  --new-orange: #ffbe86;
  --new-red: #ff729f;
  --new-background-color: #190933;
  --new-purple: #b084cc;
  --new-grey: #bdbfc7;
  max-height: 100vh;
  margin: 0;
  color: var(--new-text-color);
  font-size: 1.2vw;
  font-family: 'Roboto Mono', monospace;
  background-color: var(--new-background-color);
}

header {
  width: 80vw;
  margin: 0 auto;
}

h1 {
  margin-top: 0;
  margin-bottom: 5px;
  font-weight: 500;
  font-size: 3rem;
  text-align: center;
}

p {
  margin-bottom: 2rem;
  font-size: 1.2rem;
  line-height: 1.6;
}

em {
  color: var(--new-text-color);
  font-weight: bold;
  font-style: normal;
}

main {
  width: var(--container-size);
  min-width: 150px;
  max-width: var(--max-container-size);
  margin: 2em auto 0;
  text-align: center;
}

.pop-out-icon {
  display: flex;
  justify-content: end;
  margin-top: 0;
  cursor: pointer;
}

.pop-out-icon:hover,
.pop-out-icon:focus {
  color: var(--new-text-color);
}

.controls-area {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 2rem 0 0;
}

.input-div {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 75%;
}

.time-input {
  display: inline-block;
  width: 3em;
  padding: 0.5em;
  color: var(--new-background-color);
  font-size: 1rem;
  background-color: var(--new-text-color);
  border: none;
  border-radius: 4px;
}

/* --- Hide arrows in number inputs --- */
/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
}

/* Firefox */
input[type='number'] {
  -moz-appearance: textfield;
  appearance: textfield;
}

.button-div {
  display: flex;
  justify-content: space-evenly;
  width: 85%;
  margin: 1em 0;
}

.remaining-path-color {
  color: var(--remaining-path-color);
}

button {
  display: inline-block;
  padding: 0.5em 1.25em;
  color: var(--new-background-color);
  font-size: 1rem;
  background-color: var(--new-red);
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

#pause-btn {
  display: none;
}

/* Sets the containers height and width */
.base-timer {
  position: relative;
  width: var(--container-size);
  max-width: var(--max-container-size);
  height: var(--container-size);
  max-height: var(--max-container-size);
}

/* Removes SVG styling that would hide the time label */
.base-timer__circle {
  fill: none;
  stroke: none;
}

/* The SVG path that displays the timer's progress */
.base-timer__path-elapsed {
  stroke: grey;
  stroke-width: 9px;
}

.base-timer__label {
  position: absolute;

  /* Keep the label aligned to the top */
  top: 0;

  /* Create a flexible box that centers content vertically and horizontally */
  display: flex;
  align-items: center;
  justify-content: center;

  /* Size should match the parent container */
  width: var(--container-size);
  max-width: var(--max-container-size);
  height: var(--container-size);
  max-height: var(--max-container-size);
  color: var(--new-grey);
  font-size: 3rem;
}

.base-timer__path-remaining {
  /* Makes sure the animation starts at the top of the circle */
  transform: rotate(90deg);
  transform-origin: center;

  /* One second aligns with the speed of the countdown timer */
  transition: 1s linear all;

  /* Allows the ring to change color when the color value updates */
  stroke: currentColor;
  /* Just as thick as the original ring */
  stroke-width: 9px;

  /* Rounds the line endings to create a seamless circle */
  stroke-linecap: round;
}

.base-timer__svg {
  /* Flips the svg and makes the animation to move left-to-right */
  transform: scaleX(-1);
}

@media screen and (max-width: 1300px) {
  html {
    font-size: 1.2rem;
  }
}

@media screen and (max-width: 650px) {
  html {
    font-size: 5vw;
  }

  .base-timer__label {
    font-size: 2rem;
  }
  h1 {
    font-size: 1.5rem;
  }
}
